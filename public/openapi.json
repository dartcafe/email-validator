{
    "openapi": "3.0.0",
    "info": {
        "title": "Email Validator API",
        "description": "Validates email format, predicts sendability, and warns on configured deny-lists.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/validate": {
            "get": {
                "tags": [
                    "Validation"
                ],
                "summary": "Validate an email address (query parameter)",
                "operationId": "fed1eb5de615644922ac7a97e1eba997",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address to validate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "user@mailinator.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailValidationResponse"
                                },
                                "examples": {
                                    "deny_disposable": {
                                        "summary": "Format ok; deliverable; deny list warning",
                                        "value": {
                                            "query": "user@mailinator.com",
                                            "corrections": {
                                                "normalized": "user@mailinator.com",
                                                "suggestion": null
                                            },
                                            "simpleResults": {
                                                "formatValid": true,
                                                "isSendable": true,
                                                "hasWarnings": true
                                            },
                                            "reasons": [],
                                            "warnings": [
                                                "deny_list:disposable"
                                            ],
                                            "dns": {
                                                "domainExists": true,
                                                "hasMx": true
                                            },
                                            "lists": [
                                                {
                                                    "name": "disposable",
                                                    "humanName": "Disposable providers",
                                                    "typ": "deny",
                                                    "checkType": "domain",
                                                    "matched": true,
                                                    "matchedValue": "mailinator.com"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid query parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Validation"
                ],
                "summary": "Validate an email address (request body)",
                "operationId": "e453957c05179af85b9bf6fe1e68ca55",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailValidationRequest"
                            },
                            "examples": {
                                "simple": {
                                    "summary": "Simple request",
                                    "value": {
                                        "email": "user@example.com"
                                    }
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailValidationResponse"
                                },
                                "examples": {
                                    "valid_sendable": {
                                        "summary": "Format ok and sendable",
                                        "value": {
                                            "query": "user@example.com",
                                            "corrections": {
                                                "normalized": "user@example.com",
                                                "suggestion": null
                                            },
                                            "simpleResults": {
                                                "formatValid": true,
                                                "isSendable": true,
                                                "hasWarnings": false
                                            },
                                            "reasons": [],
                                            "warnings": [],
                                            "dns": {
                                                "domainExists": true,
                                                "hasMx": true
                                            },
                                            "lists": []
                                        }
                                    },
                                    "no_mx": {
                                        "summary": "Format ok but not sendable (no MX)",
                                        "value": {
                                            "query": "user@nomx.example",
                                            "corrections": {
                                                "normalized": "user@nomx.example",
                                                "suggestion": null
                                            },
                                            "simpleResults": {
                                                "formatValid": true,
                                                "isSendable": false,
                                                "hasWarnings": false
                                            },
                                            "reasons": [
                                                "no_mx"
                                            ],
                                            "warnings": [],
                                            "dns": {
                                                "domainExists": true,
                                                "hasMx": false
                                            },
                                            "lists": []
                                        }
                                    },
                                    "format_error": {
                                        "summary": "Invalid format (early return)",
                                        "value": {
                                            "query": "user.example.com",
                                            "corrections": {
                                                "normalized": null,
                                                "suggestion": null
                                            },
                                            "simpleResults": {
                                                "formatValid": false,
                                                "isSendable": false,
                                                "hasWarnings": false
                                            },
                                            "reasons": [
                                                "missing_at"
                                            ],
                                            "warnings": [],
                                            "dns": {
                                                "domainExists": null,
                                                "hasMx": null
                                            },
                                            "lists": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "description": "Human-readable error message",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EmailValidationRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "description": "Email address to validate",
                        "type": "string",
                        "format": "email"
                    }
                },
                "type": "object"
            },
            "Reason": {
                "description": "Format/DNS reason codes",
                "type": "string",
                "enum": [
                    "empty",
                    "syntax",
                    "missing_at",
                    "local_too_long",
                    "domain_too_long",
                    "address_too_long",
                    "domain_malformed",
                    "domain_not_found",
                    "no_mx"
                ]
            },
            "Warning": {
                "description": "Non-fatal warnings (e.g., deny list hits)",
                "oneOf": [
                    {
                        "type": "string",
                        "pattern": "^deny_list:[A-Za-z0-9_\\-]+$"
                    }
                ]
            },
            "ListOutcome": {
                "description": "Outcome for a single configured list.",
                "required": [
                    "name",
                    "humanName",
                    "typ",
                    "checkType",
                    "matched"
                ],
                "properties": {
                    "name": {
                        "description": "Technical list identifier",
                        "type": "string"
                    },
                    "humanName": {
                        "description": "Display name",
                        "type": "string"
                    },
                    "typ": {
                        "type": "string",
                        "enum": [
                            "allow",
                            "deny"
                        ]
                    },
                    "checkType": {
                        "type": "string",
                        "enum": [
                            "domain",
                            "address"
                        ]
                    },
                    "matched": {
                        "type": "boolean"
                    },
                    "matchedValue": {
                        "description": "Matched domain or address",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Corrections": {
                "properties": {
                    "normalized": {
                        "description": "Lowercased domain, IDNA ASCII",
                        "type": "string",
                        "nullable": true
                    },
                    "suggestion": {
                        "description": "Suggested fix for common domain typos",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SimpleResults": {
                "required": [
                    "formatValid",
                    "isSendable",
                    "hasWarnings"
                ],
                "properties": {
                    "formatValid": {
                        "description": "Format validity only (syntax/structure)",
                        "type": "boolean"
                    },
                    "isSendable": {
                        "description": "Deliverability prediction: true only if domain resolves and MX exists",
                        "type": "boolean"
                    },
                    "hasWarnings": {
                        "description": "True if any non-fatal warnings present",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DnsResult": {
                "properties": {
                    "domainExists": {
                        "description": "Domain has A/AAAA records (null if not checked)",
                        "type": "boolean",
                        "nullable": true
                    },
                    "hasMx": {
                        "description": "Domain has MX records (null if not checked)",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "EmailValidationResponse": {
                "description": "Validation outcome with format, deliverability, warnings and list matches.",
                "required": [
                    "simpleResults",
                    "reasons",
                    "warnings",
                    "corrections",
                    "dns",
                    "lists"
                ],
                "properties": {
                    "query": {
                        "description": "Input email as received (trimmed)",
                        "type": "string",
                        "nullable": true
                    },
                    "corrections": {
                        "$ref": "#/components/schemas/Corrections"
                    },
                    "simpleResults": {
                        "$ref": "#/components/schemas/SimpleResults"
                    },
                    "reasons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reason"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Warning"
                        }
                    },
                    "dns": {
                        "$ref": "#/components/schemas/DnsResult"
                    },
                    "lists": {
                        "description": "Per-list outcomes based on configured lists.ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListOutcome"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Validation",
            "description": "Email validation endpoints"
        }
    ]
}